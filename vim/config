execute pathogen#infect()

set tags=./tags; ",tags,.vim/tags

let g:easytags_dynamic_files = 1
let g:easytags_file = '~/.vim/tags'
let g:easytags_autorecurse = 1
let g:easytags_events = ['BufWritePost']

set number
set hidden

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set autoindent
set smartindent

syntax on
filetype plugin indent on

"set backspace
"set incsearch
"set scrolloff
"set noundofile

set background=dark
colorscheme solarized

" If term doesn't have the nutso solarized scheme, just set this
" let g:solarized_termcolors=256

" Buffer navigation
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>

nnoremap <Leader>b :ls<CR>
nnoremap <Leader>e :NERDTreeToggle<CR>
nnoremap <Leader>nc :NERDTreeClose<CR>
nnoremap <Leader>s  :source %<CR>
nnoremap <Leader>rb :!bash %<CR>
nnoremap <Leader>jj :!node %<CR>

nnoremap <Leader>rt :exec ReadTags()<CR>
nnoremap <Leader>v :tabe ~/.vimrc<CR>
let g:syntastic_always_populate_loc_list=1
set pastetoggle=<Leader>p

set ttimeout
set ttimeoutlen=100

function! SaveNow() 
  :NERDTreeClose
  :w!
endfunction

function! QuitNow() 
  :NERDTreeClose
  :q!
endfunction

nnoremap <Leader>qa :qa!<CR>
nnoremap <Leader>q :exec QuitNow()<CR>
nnoremap <Leader>w :exec SaveNow()<CR>
nnoremap <Leader>ss :w !sudo tee %<CR>
nnoremap <Leader>ff :FufFile<CR>
nnoremap <Leader>fb :FufBuffer<CR>
nnoremap <Leader>p :CtrlPMixed<CR>

nnoremap <Leader>h :call pathogen#helptags()<CR>

nnoremap <Leader>gg :Gstatus<CR>

"|   q[a-z] *MISC* q to record a macro to $id
"|   let @[a-z] = 'contents'; to define a macro
"|   Control-R Control-R $id to paste macro as is
"|   " [$id] y to yank into reg $id
"|   Control-R [a-z] to paste a reg

let $JS_CMD='nodejs'
let mapleader = ","

imap jj <Esc>:w<CR>
imap rr <Esc>:w<CR><Leader>rb

let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1 
"let g:miniBufExplAutoStart = 0
"let g:miniBufExplBuffersNeeded = 0



autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif "`""'")

au BufWritePost *.c,*.cpp,*.h,*.js,*.py,*.sh silent! !ctags -R &





